#include <bits/stdc++.h>
using namespace std;

const int MAX = 109;

int cores[MAX][MAX], dp[MAX][MAX], mix[MAX], n;

int solve(int a, int b)
{
	if (a==b) return 0;
	if (b==a+1) return mix[a]*mix[b];

	int smoke;
	if (dp[a][b] == -1){
		for (int i=a; i+1<=b; ++i){
			smoke = cores[a][i]*cores[i+1][b] + solve(a,i) + solve(i+1,b);
			if (dp[a][b] == -1 || smoke < dp[a][b]) dp[a][b] = smoke;
		}
	}
	return dp[a][b];
}

int main()
{
	while (scanf("%d", &n) != EOF){
		for (int i=0; i<n; ++i)	scanf("%d", &mix[i]);
		for (int i=0; i<n; ++i) cores [i][i] = mix[i];

		for (int i=0; i<n; ++i)
			for (int j=i+1; j<n; ++j)
				cores[i][j] = (cores[i][j-1] + mix[j])%100;

		memset(dp, -1, sizeof(dp));
		printf("%d\n",  solve(0, n-1));
	}
	return 0;
}
