#include <bits/stdc++.h>
using namespace std;
#define MAX_N 50009
#define MAX_M 200009

vector< vector<int> > adj(MAX_N);
set<int> valid;
set<int>::iterator it;
int N, M;
int indeg[MAX_N], vis[MAX_N];
vector<int> resp;

void findv()
{
	for (int i=0; i<N; ++i){
		if (indeg[i] == 0) valid.insert(i);
	}
}

void bfs()
{	
	findv();
	while(valid.size()>0){
		it = valid.begin();
		int v = *it;
		resp.push_back(v);
		vis[v] = 1;
		for (int i=0; i<adj[v].size(); ++i){
			int nxt = adj[v][i];
			if(!vis[nxt]){
				indeg[nxt]--;
				if(indeg[nxt] == 0) valid.insert(nxt);
			}
		}
		valid.erase(v);
	}
}

int main()
{
	scanf("%d %d", &N, &M);	
	while (M>0){
		int A, B;
		scanf("%d %d", &A, &B);
		adj[A].push_back(B);
		indeg[B]++;
		M--;
	}
	bfs();
	int tam = resp.size();
	if (tam==N){
		for(int i=0; i<tam; ++i){
			printf("%d\n", resp[i]);
		}
	}
	else
		printf("*");
	return 0;
}
